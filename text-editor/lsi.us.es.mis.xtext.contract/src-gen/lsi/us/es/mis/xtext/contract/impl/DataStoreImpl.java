/**
 * generated by Xtext 2.25.0
 */
package lsi.us.es.mis.xtext.contract.impl;

import lsi.us.es.mis.xtext.contract.ContractPackage;
import lsi.us.es.mis.xtext.contract.DataStore;
import lsi.us.es.mis.xtext.contract.DataType;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Data Store</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link lsi.us.es.mis.xtext.contract.impl.DataStoreImpl#getName <em>Name</em>}</li>
 *   <li>{@link lsi.us.es.mis.xtext.contract.impl.DataStoreImpl#getFromType <em>From Type</em>}</li>
 *   <li>{@link lsi.us.es.mis.xtext.contract.impl.DataStoreImpl#getToType <em>To Type</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DataStoreImpl extends MinimalEObjectImpl.Container implements DataStore
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getFromType() <em>From Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFromType()
   * @generated
   * @ordered
   */
  protected static final DataType FROM_TYPE_EDEFAULT = DataType.INTEGER;

  /**
   * The cached value of the '{@link #getFromType() <em>From Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFromType()
   * @generated
   * @ordered
   */
  protected DataType fromType = FROM_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getToType() <em>To Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getToType()
   * @generated
   * @ordered
   */
  protected static final DataType TO_TYPE_EDEFAULT = DataType.INTEGER;

  /**
   * The cached value of the '{@link #getToType() <em>To Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getToType()
   * @generated
   * @ordered
   */
  protected DataType toType = TO_TYPE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DataStoreImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ContractPackage.Literals.DATA_STORE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ContractPackage.DATA_STORE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DataType getFromType()
  {
    return fromType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFromType(DataType newFromType)
  {
    DataType oldFromType = fromType;
    fromType = newFromType == null ? FROM_TYPE_EDEFAULT : newFromType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ContractPackage.DATA_STORE__FROM_TYPE, oldFromType, fromType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DataType getToType()
  {
    return toType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setToType(DataType newToType)
  {
    DataType oldToType = toType;
    toType = newToType == null ? TO_TYPE_EDEFAULT : newToType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ContractPackage.DATA_STORE__TO_TYPE, oldToType, toType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ContractPackage.DATA_STORE__NAME:
        return getName();
      case ContractPackage.DATA_STORE__FROM_TYPE:
        return getFromType();
      case ContractPackage.DATA_STORE__TO_TYPE:
        return getToType();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ContractPackage.DATA_STORE__NAME:
        setName((String)newValue);
        return;
      case ContractPackage.DATA_STORE__FROM_TYPE:
        setFromType((DataType)newValue);
        return;
      case ContractPackage.DATA_STORE__TO_TYPE:
        setToType((DataType)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ContractPackage.DATA_STORE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case ContractPackage.DATA_STORE__FROM_TYPE:
        setFromType(FROM_TYPE_EDEFAULT);
        return;
      case ContractPackage.DATA_STORE__TO_TYPE:
        setToType(TO_TYPE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ContractPackage.DATA_STORE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case ContractPackage.DATA_STORE__FROM_TYPE:
        return fromType != FROM_TYPE_EDEFAULT;
      case ContractPackage.DATA_STORE__TO_TYPE:
        return toType != TO_TYPE_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", fromType: ");
    result.append(fromType);
    result.append(", toType: ");
    result.append(toType);
    result.append(')');
    return result.toString();
  }

} //DataStoreImpl
