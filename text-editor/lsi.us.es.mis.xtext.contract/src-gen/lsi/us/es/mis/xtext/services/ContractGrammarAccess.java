/*
 * generated by Xtext 2.25.0
 */
package lsi.us.es.mis.xtext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class ContractGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ContractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "lsi.us.es.mis.xtext.Contract.Contract");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContractKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cVersionKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cVersionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cVersionSTRINGTerminalRuleCall_4_0 = (RuleCall)cVersionAssignment_4.eContents().get(0);
		private final Assignment cHasReceiveAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Keyword cHasReceiveHasReceiveKeyword_5_0 = (Keyword)cHasReceiveAssignment_5.eContents().get(0);
		private final Assignment cOwnershipAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final Keyword cOwnershipOwnershipKeyword_6_0 = (Keyword)cOwnershipAssignment_6.eContents().get(0);
		private final Alternatives cAlternatives_7 = (Alternatives)cGroup.eContents().get(7);
		private final Assignment cAttributesAssignment_7_0 = (Assignment)cAlternatives_7.eContents().get(0);
		private final RuleCall cAttributesAttributeParserRuleCall_7_0_0 = (RuleCall)cAttributesAssignment_7_0.eContents().get(0);
		private final Assignment cEventsAssignment_7_1 = (Assignment)cAlternatives_7.eContents().get(1);
		private final RuleCall cEventsEventParserRuleCall_7_1_0 = (RuleCall)cEventsAssignment_7_1.eContents().get(0);
		private final Assignment cMethodsAssignment_7_2 = (Assignment)cAlternatives_7.eContents().get(2);
		private final RuleCall cMethodsMethodParserRuleCall_7_2_0 = (RuleCall)cMethodsAssignment_7_2.eContents().get(0);
		private final Assignment cModifiersAssignment_7_3 = (Assignment)cAlternatives_7.eContents().get(3);
		private final RuleCall cModifiersModifierParserRuleCall_7_3_0 = (RuleCall)cModifiersAssignment_7_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Contract:
		//    'Contract' name=ID
		//    '{'
		//        'version:' version = STRING
		//        (hasReceive?='hasReceive')?
		//        (ownership?='ownership')?
		//        (attributes+=Attribute | events+=Event | methods+=Method | modifiers+=Modifier)*
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Contract' name=ID
		//'{'
		//    'version:' version = STRING
		//    (hasReceive?='hasReceive')?
		//    (ownership?='ownership')?
		//    (attributes+=Attribute | events+=Event | methods+=Method | modifiers+=Modifier)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Contract'
		public Keyword getContractKeyword_0() { return cContractKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'version:'
		public Keyword getVersionKeyword_3() { return cVersionKeyword_3; }
		
		//version = STRING
		public Assignment getVersionAssignment_4() { return cVersionAssignment_4; }
		
		//STRING
		public RuleCall getVersionSTRINGTerminalRuleCall_4_0() { return cVersionSTRINGTerminalRuleCall_4_0; }
		
		//(hasReceive?='hasReceive')?
		public Assignment getHasReceiveAssignment_5() { return cHasReceiveAssignment_5; }
		
		//'hasReceive'
		public Keyword getHasReceiveHasReceiveKeyword_5_0() { return cHasReceiveHasReceiveKeyword_5_0; }
		
		//(ownership?='ownership')?
		public Assignment getOwnershipAssignment_6() { return cOwnershipAssignment_6; }
		
		//'ownership'
		public Keyword getOwnershipOwnershipKeyword_6_0() { return cOwnershipOwnershipKeyword_6_0; }
		
		//(attributes+=Attribute | events+=Event | methods+=Method | modifiers+=Modifier)*
		public Alternatives getAlternatives_7() { return cAlternatives_7; }
		
		//attributes+=Attribute
		public Assignment getAttributesAssignment_7_0() { return cAttributesAssignment_7_0; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_7_0_0() { return cAttributesAttributeParserRuleCall_7_0_0; }
		
		//events+=Event
		public Assignment getEventsAssignment_7_1() { return cEventsAssignment_7_1; }
		
		//Event
		public RuleCall getEventsEventParserRuleCall_7_1_0() { return cEventsEventParserRuleCall_7_1_0; }
		
		//methods+=Method
		public Assignment getMethodsAssignment_7_2() { return cMethodsAssignment_7_2; }
		
		//Method
		public RuleCall getMethodsMethodParserRuleCall_7_2_0() { return cMethodsMethodParserRuleCall_7_2_0; }
		
		//modifiers+=Modifier
		public Assignment getModifiersAssignment_7_3() { return cModifiersAssignment_7_3; }
		
		//Modifier
		public RuleCall getModifiersModifierParserRuleCall_7_3_0() { return cModifiersModifierParserRuleCall_7_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "lsi.us.es.mis.xtext.Contract.Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cModifiableAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cModifiableModifiableKeyword_0_0 = (Keyword)cModifiableAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeDataTypeEnumRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		
		//Attribute:
		//    (modifiable?='modifiable')? name=ID type=DataType
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(modifiable?='modifiable')? name=ID type=DataType
		public Group getGroup() { return cGroup; }
		
		//(modifiable?='modifiable')?
		public Assignment getModifiableAssignment_0() { return cModifiableAssignment_0; }
		
		//'modifiable'
		public Keyword getModifiableModifiableKeyword_0_0() { return cModifiableModifiableKeyword_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//type=DataType
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//DataType
		public RuleCall getTypeDataTypeEnumRuleCall_2_0() { return cTypeDataTypeEnumRuleCall_2_0; }
	}
	public class ModifierElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "lsi.us.es.mis.xtext.Contract.Modifier");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModifierKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cParamsAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cParamsParamParserRuleCall_3_0_0 = (RuleCall)cParamsAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cParamsAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cParamsParamParserRuleCall_3_1_1_0 = (RuleCall)cParamsAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cMessageKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cMessageAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cMessageSTRINGTerminalRuleCall_7_0 = (RuleCall)cMessageAssignment_7.eContents().get(0);
		private final Keyword cValidationKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cValidationAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cValidationSTRINGTerminalRuleCall_9_0 = (RuleCall)cValidationAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Modifier:
		//    'Modifier' name=ID '(' (params+=Param (',' params+=Param)*)? ')'
		//    '{'
		//        'message:' message = STRING
		//        'validation:' validation = STRING
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Modifier' name=ID '(' (params+=Param (',' params+=Param)*)? ')'
		//'{'
		//    'message:' message = STRING
		//    'validation:' validation = STRING
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Modifier'
		public Keyword getModifierKeyword_0() { return cModifierKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//(params+=Param (',' params+=Param)*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//params+=Param
		public Assignment getParamsAssignment_3_0() { return cParamsAssignment_3_0; }
		
		//Param
		public RuleCall getParamsParamParserRuleCall_3_0_0() { return cParamsParamParserRuleCall_3_0_0; }
		
		//(',' params+=Param)*
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//','
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }
		
		//params+=Param
		public Assignment getParamsAssignment_3_1_1() { return cParamsAssignment_3_1_1; }
		
		//Param
		public RuleCall getParamsParamParserRuleCall_3_1_1_0() { return cParamsParamParserRuleCall_3_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//'message:'
		public Keyword getMessageKeyword_6() { return cMessageKeyword_6; }
		
		//message = STRING
		public Assignment getMessageAssignment_7() { return cMessageAssignment_7; }
		
		//STRING
		public RuleCall getMessageSTRINGTerminalRuleCall_7_0() { return cMessageSTRINGTerminalRuleCall_7_0; }
		
		//'validation:'
		public Keyword getValidationKeyword_8() { return cValidationKeyword_8; }
		
		//validation = STRING
		public Assignment getValidationAssignment_9() { return cValidationAssignment_9; }
		
		//STRING
		public RuleCall getValidationSTRINGTerminalRuleCall_9_0() { return cValidationSTRINGTerminalRuleCall_9_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class MethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "lsi.us.es.mis.xtext.Contract.Method");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMethodKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cParamsAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cParamsParamParserRuleCall_3_0_0 = (RuleCall)cParamsAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cParamsAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cParamsParamParserRuleCall_3_1_1_0 = (RuleCall)cParamsAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cStateMutabilityKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cStatemutabilityAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cStatemutabilitySTRINGTerminalRuleCall_5_1_0 = (RuleCall)cStatemutabilityAssignment_5_1.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Assignment cOutputsAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final RuleCall cOutputsOutputParserRuleCall_7_0_0 = (RuleCall)cOutputsAssignment_7_0.eContents().get(0);
		private final Group cGroup_7_1 = (Group)cGroup_7.eContents().get(1);
		private final Keyword cCommaKeyword_7_1_0 = (Keyword)cGroup_7_1.eContents().get(0);
		private final Assignment cOutputsAssignment_7_1_1 = (Assignment)cGroup_7_1.eContents().get(1);
		private final RuleCall cOutputsOutputParserRuleCall_7_1_1_0 = (RuleCall)cOutputsAssignment_7_1_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cDescriptionKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cDescriptionAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_9_1_0 = (RuleCall)cDescriptionAssignment_9_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Assignment cModifiersAssignment_10_0 = (Assignment)cGroup_10.eContents().get(0);
		private final CrossReference cModifiersModifierCrossReference_10_0_0 = (CrossReference)cModifiersAssignment_10_0.eContents().get(0);
		private final RuleCall cModifiersModifierIDTerminalRuleCall_10_0_0_1 = (RuleCall)cModifiersModifierCrossReference_10_0_0.eContents().get(1);
		private final Group cGroup_10_1 = (Group)cGroup_10.eContents().get(1);
		private final Keyword cCommaKeyword_10_1_0 = (Keyword)cGroup_10_1.eContents().get(0);
		private final Assignment cModifiersAssignment_10_1_1 = (Assignment)cGroup_10_1.eContents().get(1);
		private final CrossReference cModifiersModifierCrossReference_10_1_1_0 = (CrossReference)cModifiersAssignment_10_1_1.eContents().get(0);
		private final RuleCall cModifiersModifierIDTerminalRuleCall_10_1_1_0_1 = (RuleCall)cModifiersModifierCrossReference_10_1_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Method:
		//    'method' name=ID '(' (params+=Param (',' params+=Param)*)? ')' ('stateMutability:' statemutability=STRING)? '->' (outputs+=Output (',' outputs+=Output)*)?
		//     '{'
		//         ('description:' description = STRING)?
		//         (modifiers+=[Modifier] (',' modifiers+=[Modifier])*)?
		//     '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'method' name=ID '(' (params+=Param (',' params+=Param)*)? ')' ('stateMutability:' statemutability=STRING)? '->' (outputs+=Output (',' outputs+=Output)*)?
		// '{'
		//     ('description:' description = STRING)?
		//     (modifiers+=[Modifier] (',' modifiers+=[Modifier])*)?
		// '}'
		public Group getGroup() { return cGroup; }
		
		//'method'
		public Keyword getMethodKeyword_0() { return cMethodKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//(params+=Param (',' params+=Param)*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//params+=Param
		public Assignment getParamsAssignment_3_0() { return cParamsAssignment_3_0; }
		
		//Param
		public RuleCall getParamsParamParserRuleCall_3_0_0() { return cParamsParamParserRuleCall_3_0_0; }
		
		//(',' params+=Param)*
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//','
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }
		
		//params+=Param
		public Assignment getParamsAssignment_3_1_1() { return cParamsAssignment_3_1_1; }
		
		//Param
		public RuleCall getParamsParamParserRuleCall_3_1_1_0() { return cParamsParamParserRuleCall_3_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
		
		//('stateMutability:' statemutability=STRING)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'stateMutability:'
		public Keyword getStateMutabilityKeyword_5_0() { return cStateMutabilityKeyword_5_0; }
		
		//statemutability=STRING
		public Assignment getStatemutabilityAssignment_5_1() { return cStatemutabilityAssignment_5_1; }
		
		//STRING
		public RuleCall getStatemutabilitySTRINGTerminalRuleCall_5_1_0() { return cStatemutabilitySTRINGTerminalRuleCall_5_1_0; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_6() { return cHyphenMinusGreaterThanSignKeyword_6; }
		
		//(outputs+=Output (',' outputs+=Output)*)?
		public Group getGroup_7() { return cGroup_7; }
		
		//outputs+=Output
		public Assignment getOutputsAssignment_7_0() { return cOutputsAssignment_7_0; }
		
		//Output
		public RuleCall getOutputsOutputParserRuleCall_7_0_0() { return cOutputsOutputParserRuleCall_7_0_0; }
		
		//(',' outputs+=Output)*
		public Group getGroup_7_1() { return cGroup_7_1; }
		
		//','
		public Keyword getCommaKeyword_7_1_0() { return cCommaKeyword_7_1_0; }
		
		//outputs+=Output
		public Assignment getOutputsAssignment_7_1_1() { return cOutputsAssignment_7_1_1; }
		
		//Output
		public RuleCall getOutputsOutputParserRuleCall_7_1_1_0() { return cOutputsOutputParserRuleCall_7_1_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//('description:' description = STRING)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'description:'
		public Keyword getDescriptionKeyword_9_0() { return cDescriptionKeyword_9_0; }
		
		//description = STRING
		public Assignment getDescriptionAssignment_9_1() { return cDescriptionAssignment_9_1; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_9_1_0() { return cDescriptionSTRINGTerminalRuleCall_9_1_0; }
		
		//(modifiers+=[Modifier] (',' modifiers+=[Modifier])*)?
		public Group getGroup_10() { return cGroup_10; }
		
		//modifiers+=[Modifier]
		public Assignment getModifiersAssignment_10_0() { return cModifiersAssignment_10_0; }
		
		//[Modifier]
		public CrossReference getModifiersModifierCrossReference_10_0_0() { return cModifiersModifierCrossReference_10_0_0; }
		
		//ID
		public RuleCall getModifiersModifierIDTerminalRuleCall_10_0_0_1() { return cModifiersModifierIDTerminalRuleCall_10_0_0_1; }
		
		//(',' modifiers+=[Modifier])*
		public Group getGroup_10_1() { return cGroup_10_1; }
		
		//','
		public Keyword getCommaKeyword_10_1_0() { return cCommaKeyword_10_1_0; }
		
		//modifiers+=[Modifier]
		public Assignment getModifiersAssignment_10_1_1() { return cModifiersAssignment_10_1_1; }
		
		//[Modifier]
		public CrossReference getModifiersModifierCrossReference_10_1_1_0() { return cModifiersModifierCrossReference_10_1_1_0; }
		
		//ID
		public RuleCall getModifiersModifierIDTerminalRuleCall_10_1_1_0_1() { return cModifiersModifierIDTerminalRuleCall_10_1_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class EventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "lsi.us.es.mis.xtext.Contract.Event");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEventKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cParamsAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cParamsParamParserRuleCall_3_0_0 = (RuleCall)cParamsAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cParamsAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cParamsParamParserRuleCall_3_1_1_0 = (RuleCall)cParamsAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cDescriptionKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cDescriptionAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_7_0 = (RuleCall)cDescriptionAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Event:
		//    'event' name=ID '(' (params+=Param (',' params+=Param)*)? ')'
		//     '{'
		//         'description:' description=STRING
		//     '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'event' name=ID '(' (params+=Param (',' params+=Param)*)? ')'
		// '{'
		//     'description:' description=STRING
		// '}'
		public Group getGroup() { return cGroup; }
		
		//'event'
		public Keyword getEventKeyword_0() { return cEventKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//(params+=Param (',' params+=Param)*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//params+=Param
		public Assignment getParamsAssignment_3_0() { return cParamsAssignment_3_0; }
		
		//Param
		public RuleCall getParamsParamParserRuleCall_3_0_0() { return cParamsParamParserRuleCall_3_0_0; }
		
		//(',' params+=Param)*
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//','
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }
		
		//params+=Param
		public Assignment getParamsAssignment_3_1_1() { return cParamsAssignment_3_1_1; }
		
		//Param
		public RuleCall getParamsParamParserRuleCall_3_1_1_0() { return cParamsParamParserRuleCall_3_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//'description:'
		public Keyword getDescriptionKeyword_6() { return cDescriptionKeyword_6; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_7() { return cDescriptionAssignment_7; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_7_0() { return cDescriptionSTRINGTerminalRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class ParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "lsi.us.es.mis.xtext.Contract.Param");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeDataTypeEnumRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		
		//Param:
		//    name=ID type=DataType
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID type=DataType
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//type=DataType
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }
		
		//DataType
		public RuleCall getTypeDataTypeEnumRuleCall_1_0() { return cTypeDataTypeEnumRuleCall_1_0; }
	}
	public class OutputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "lsi.us.es.mis.xtext.Contract.Output");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeDataTypeEnumRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		
		//Output:
		//    name=ID type=DataType
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID type=DataType
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//type=DataType
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }
		
		//DataType
		public RuleCall getTypeDataTypeEnumRuleCall_1_0() { return cTypeDataTypeEnumRuleCall_1_0; }
	}
	
	public class DataTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "lsi.us.es.mis.xtext.Contract.DataType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cINTEGEREnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cINTEGERIntegerKeyword_0_0 = (Keyword)cINTEGEREnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSTRINGEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSTRINGStringKeyword_1_0 = (Keyword)cSTRINGEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBOOLEANEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBOOLEANBooleanKeyword_2_0 = (Keyword)cBOOLEANEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cADDRESSEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cADDRESSAddressKeyword_3_0 = (Keyword)cADDRESSEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cArrayEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cArrayArrayKeyword_4_0 = (Keyword)cArrayEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum DataType:
		//    INTEGER = 'integer' | STRING='string' | BOOLEAN='boolean' | ADDRESS = 'address' | array = 'array';
		public EnumRule getRule() { return rule; }
		
		//INTEGER = 'integer' | STRING='string' | BOOLEAN='boolean' | ADDRESS = 'address' | array = 'array'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//INTEGER = 'integer'
		public EnumLiteralDeclaration getINTEGEREnumLiteralDeclaration_0() { return cINTEGEREnumLiteralDeclaration_0; }
		
		//'integer'
		public Keyword getINTEGERIntegerKeyword_0_0() { return cINTEGERIntegerKeyword_0_0; }
		
		//STRING='string'
		public EnumLiteralDeclaration getSTRINGEnumLiteralDeclaration_1() { return cSTRINGEnumLiteralDeclaration_1; }
		
		//'string'
		public Keyword getSTRINGStringKeyword_1_0() { return cSTRINGStringKeyword_1_0; }
		
		//BOOLEAN='boolean'
		public EnumLiteralDeclaration getBOOLEANEnumLiteralDeclaration_2() { return cBOOLEANEnumLiteralDeclaration_2; }
		
		//'boolean'
		public Keyword getBOOLEANBooleanKeyword_2_0() { return cBOOLEANBooleanKeyword_2_0; }
		
		//ADDRESS = 'address'
		public EnumLiteralDeclaration getADDRESSEnumLiteralDeclaration_3() { return cADDRESSEnumLiteralDeclaration_3; }
		
		//'address'
		public Keyword getADDRESSAddressKeyword_3_0() { return cADDRESSAddressKeyword_3_0; }
		
		//array = 'array'
		public EnumLiteralDeclaration getArrayEnumLiteralDeclaration_4() { return cArrayEnumLiteralDeclaration_4; }
		
		//'array'
		public Keyword getArrayArrayKeyword_4_0() { return cArrayArrayKeyword_4_0; }
	}
	
	private final ContractElements pContract;
	private final AttributeElements pAttribute;
	private final ModifierElements pModifier;
	private final MethodElements pMethod;
	private final EventElements pEvent;
	private final ParamElements pParam;
	private final OutputElements pOutput;
	private final DataTypeElements eDataType;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public ContractGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pContract = new ContractElements();
		this.pAttribute = new AttributeElements();
		this.pModifier = new ModifierElements();
		this.pMethod = new MethodElements();
		this.pEvent = new EventElements();
		this.pParam = new ParamElements();
		this.pOutput = new OutputElements();
		this.eDataType = new DataTypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("lsi.us.es.mis.xtext.Contract".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Contract:
	//    'Contract' name=ID
	//    '{'
	//        'version:' version = STRING
	//        (hasReceive?='hasReceive')?
	//        (ownership?='ownership')?
	//        (attributes+=Attribute | events+=Event | methods+=Method | modifiers+=Modifier)*
	//    '}'
	//;
	public ContractElements getContractAccess() {
		return pContract;
	}
	
	public ParserRule getContractRule() {
		return getContractAccess().getRule();
	}
	
	//Attribute:
	//    (modifiable?='modifiable')? name=ID type=DataType
	//;
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}
	
	//Modifier:
	//    'Modifier' name=ID '(' (params+=Param (',' params+=Param)*)? ')'
	//    '{'
	//        'message:' message = STRING
	//        'validation:' validation = STRING
	//    '}'
	//;
	public ModifierElements getModifierAccess() {
		return pModifier;
	}
	
	public ParserRule getModifierRule() {
		return getModifierAccess().getRule();
	}
	
	//Method:
	//    'method' name=ID '(' (params+=Param (',' params+=Param)*)? ')' ('stateMutability:' statemutability=STRING)? '->' (outputs+=Output (',' outputs+=Output)*)?
	//     '{'
	//         ('description:' description = STRING)?
	//         (modifiers+=[Modifier] (',' modifiers+=[Modifier])*)?
	//     '}'
	//;
	public MethodElements getMethodAccess() {
		return pMethod;
	}
	
	public ParserRule getMethodRule() {
		return getMethodAccess().getRule();
	}
	
	//Event:
	//    'event' name=ID '(' (params+=Param (',' params+=Param)*)? ')'
	//     '{'
	//         'description:' description=STRING
	//     '}'
	//;
	public EventElements getEventAccess() {
		return pEvent;
	}
	
	public ParserRule getEventRule() {
		return getEventAccess().getRule();
	}
	
	//Param:
	//    name=ID type=DataType
	//;
	public ParamElements getParamAccess() {
		return pParam;
	}
	
	public ParserRule getParamRule() {
		return getParamAccess().getRule();
	}
	
	//Output:
	//    name=ID type=DataType
	//;
	public OutputElements getOutputAccess() {
		return pOutput;
	}
	
	public ParserRule getOutputRule() {
		return getOutputAccess().getRule();
	}
	
	//enum DataType:
	//    INTEGER = 'integer' | STRING='string' | BOOLEAN='boolean' | ADDRESS = 'address' | array = 'array';
	public DataTypeElements getDataTypeAccess() {
		return eDataType;
	}
	
	public EnumRule getDataTypeRule() {
		return getDataTypeAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
